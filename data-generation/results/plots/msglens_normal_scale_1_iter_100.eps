%!PS-Adobe-2.0 EPSF-2.0
%%Title: results/plots/msglens_normal_scale_1_iter_100.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Tue Jun 30 13:44:48 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (results/plots/msglens_normal_scale_1_iter_100.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (pkas7)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jun 30 13:44:48 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
910 588 M
63 0 V
5974 0 R
-63 0 V
stroke
826 588 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1160)]
] -73.3 MRshow
1.000 UL
LTb
910 1200 M
63 0 V
5974 0 R
-63 0 V
stroke
826 1200 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1180)]
] -73.3 MRshow
1.000 UL
LTb
910 1812 M
63 0 V
5974 0 R
-63 0 V
stroke
826 1812 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1200)]
] -73.3 MRshow
1.000 UL
LTb
910 2424 M
63 0 V
5974 0 R
-63 0 V
stroke
826 2424 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1220)]
] -73.3 MRshow
1.000 UL
LTb
910 3035 M
63 0 V
5974 0 R
-63 0 V
stroke
826 3035 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1240)]
] -73.3 MRshow
1.000 UL
LTb
910 3647 M
63 0 V
5974 0 R
-63 0 V
stroke
826 3647 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1260)]
] -73.3 MRshow
1.000 UL
LTb
910 4259 M
63 0 V
5974 0 R
-63 0 V
stroke
826 4259 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1280)]
] -73.3 MRshow
1.000 UL
LTb
910 4871 M
63 0 V
5974 0 R
-63 0 V
stroke
826 4871 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 1300)]
] -73.3 MRshow
1.000 UL
LTb
910 588 M
0 63 V
0 4220 R
0 -63 V
stroke
910 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1514 588 M
0 63 V
0 4220 R
0 -63 V
stroke
1514 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
2117 588 M
0 63 V
0 4220 R
0 -63 V
stroke
2117 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 20)]
] -73.3 MCshow
1.000 UL
LTb
2721 588 M
0 63 V
0 4220 R
0 -63 V
stroke
2721 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 30)]
] -73.3 MCshow
1.000 UL
LTb
3325 588 M
0 63 V
0 4220 R
0 -63 V
stroke
3325 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 40)]
] -73.3 MCshow
1.000 UL
LTb
3929 588 M
0 63 V
0 4220 R
0 -63 V
stroke
3929 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 50)]
] -73.3 MCshow
1.000 UL
LTb
4532 588 M
0 63 V
0 4220 R
0 -63 V
stroke
4532 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 60)]
] -73.3 MCshow
1.000 UL
LTb
5136 588 M
0 63 V
0 4220 R
0 -63 V
stroke
5136 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 70)]
] -73.3 MCshow
1.000 UL
LTb
5740 588 M
0 63 V
0 4220 R
0 -63 V
stroke
5740 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 80)]
] -73.3 MCshow
1.000 UL
LTb
6343 588 M
0 63 V
0 4220 R
0 -63 V
stroke
6343 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 90)]
] -73.3 MCshow
1.000 UL
LTb
6947 588 M
0 63 V
0 4220 R
0 -63 V
stroke
6947 448 M
[ [(Times-Roman) 220.0 0.0 true true 0 ( 100)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
910 4871 N
910 588 L
6037 0 V
0 4283 V
-6037 0 V
Z stroke
LCb setrgbcolor
112 2729 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 300.0 0.0 true true 0 (Message length \(in bits\))]
] -100.0 MCshow
grestore
LTb
LCb setrgbcolor
3928 238 M
[ [(Times-Roman) 300.0 0.0 true true 0 (Iterations)]
] -100.0 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
1.00 0.00 0.00 C LCb setrgbcolor
6296 4703 M
[ [(Helvetica) 250.0 0.0 true true 0 (Gaussian)]
] -83.3 MRshow
LT0
1.00 0.00 0.00 C 6380 4703 M
399 0 V
910 2473 M
60 -374 V
61 -151 V
60 646 V
60 -812 V
61 530 V
60 -477 V
61 348 V
60 -576 V
60 365 V
61 -250 V
60 356 V
60 -125 V
61 38 V
60 -109 V
61 694 V
60 -133 V
60 -218 V
61 98 V
60 -684 V
60 1027 V
61 -405 V
60 -525 V
61 371 V
60 -91 V
60 -247 V
61 213 V
60 265 V
60 -410 V
61 122 V
60 -634 V
60 1152 V
61 -833 V
60 317 V
61 522 V
60 -613 V
60 20 V
61 324 V
60 -220 V
60 141 V
61 164 V
60 618 V
61 -635 V
60 -432 V
60 276 V
61 -34 V
60 -258 V
60 730 V
61 -429 V
60 445 V
61 -140 V
60 15 V
60 -307 V
61 -283 V
60 287 V
60 -75 V
61 -223 V
60 539 V
60 251 V
61 -297 V
60 -99 V
61 249 V
60 -662 V
60 54 V
61 445 V
60 -536 V
60 698 V
61 -190 V
60 -332 V
61 -169 V
60 443 V
60 177 V
61 40 V
60 -220 V
60 -15 V
61 243 V
60 -206 V
60 -933 V
61 659 V
60 459 V
61 -529 V
60 297 V
60 -124 V
61 -57 V
60 69 V
60 -32 V
61 828 V
60 -914 V
61 69 V
60 199 V
60 -128 V
61 522 V
60 -118 V
60 -976 V
61 131 V
60 689 V
61 -247 V
60 93 V
60 143 V
61 -343 V
910 2473 Pls
970 2099 Pls
1031 1948 Pls
1091 2594 Pls
1151 1782 Pls
1212 2312 Pls
1272 1835 Pls
1333 2183 Pls
1393 1607 Pls
1453 1972 Pls
1514 1722 Pls
1574 2078 Pls
1634 1953 Pls
1695 1991 Pls
1755 1882 Pls
1816 2576 Pls
1876 2443 Pls
1936 2225 Pls
1997 2323 Pls
2057 1639 Pls
2117 2666 Pls
2178 2261 Pls
2238 1736 Pls
2299 2107 Pls
2359 2016 Pls
2419 1769 Pls
2480 1982 Pls
2540 2247 Pls
2600 1837 Pls
2661 1959 Pls
2721 1325 Pls
2781 2477 Pls
2842 1644 Pls
2902 1961 Pls
2963 2483 Pls
3023 1870 Pls
3083 1890 Pls
3144 2214 Pls
3204 1994 Pls
3264 2135 Pls
3325 2299 Pls
3385 2917 Pls
3446 2282 Pls
3506 1850 Pls
3566 2126 Pls
3627 2092 Pls
3687 1834 Pls
3747 2564 Pls
3808 2135 Pls
3868 2580 Pls
3929 2440 Pls
3989 2455 Pls
4049 2148 Pls
4110 1865 Pls
4170 2152 Pls
4230 2077 Pls
4291 1854 Pls
4351 2393 Pls
4411 2644 Pls
4472 2347 Pls
4532 2248 Pls
4593 2497 Pls
4653 1835 Pls
4713 1889 Pls
4774 2334 Pls
4834 1798 Pls
4894 2496 Pls
4955 2306 Pls
5015 1974 Pls
5076 1805 Pls
5136 2248 Pls
5196 2425 Pls
5257 2465 Pls
5317 2245 Pls
5377 2230 Pls
5438 2473 Pls
5498 2267 Pls
5558 1334 Pls
5619 1993 Pls
5679 2452 Pls
5740 1923 Pls
5800 2220 Pls
5860 2096 Pls
5921 2039 Pls
5981 2108 Pls
6041 2076 Pls
6102 2904 Pls
6162 1990 Pls
6223 2059 Pls
6283 2258 Pls
6343 2130 Pls
6404 2652 Pls
6464 2534 Pls
6524 1558 Pls
6585 1689 Pls
6645 2378 Pls
6706 2131 Pls
6766 2224 Pls
6826 2367 Pls
6887 2024 Pls
6579 4703 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LT1
0.00 0.39 0.00 C LCb setrgbcolor
6296 4493 M
[ [(Helvetica) 250.0 0.0 true true 0 (Laplace)]
] -83.3 MRshow
LT1
0.00 0.39 0.00 C 6380 4493 M
399 0 V
910 2859 M
60 -600 V
61 -98 V
60 675 V
60 -830 V
61 523 V
60 -578 V
61 240 V
60 -533 V
60 441 V
61 -125 V
60 329 V
60 -107 V
61 -82 V
60 -174 V
61 792 V
60 -283 V
60 -32 V
61 110 V
60 -937 V
60 1254 V
61 -303 V
60 -390 V
61 236 V
60 -120 V
60 -266 V
61 140 V
60 369 V
60 -558 V
61 303 V
60 -615 V
60 1084 V
61 -870 V
60 270 V
61 372 V
60 -367 V
60 12 V
61 245 V
60 -164 V
60 73 V
61 266 V
60 562 V
61 -726 V
60 -392 V
60 521 V
61 -178 V
60 -216 V
60 800 V
61 -575 V
60 393 V
61 -296 V
60 368 V
60 -448 V
61 -282 V
60 253 V
60 -18 V
61 -444 V
60 679 V
60 174 V
61 -128 V
60 -72 V
61 38 V
60 -628 V
60 219 V
61 526 V
60 -729 V
60 627 V
61 -30 V
60 -300 V
61 -277 V
60 498 V
60 149 V
61 121 V
60 -324 V
60 119 V
61 298 V
60 -246 V
60 -1051 V
61 703 V
60 453 V
61 -785 V
60 513 V
60 -327 V
61 -218 V
60 357 V
60 212 V
61 684 V
60 -904 V
61 -30 V
60 413 V
60 -288 V
61 582 V
60 -226 V
60 -1100 V
61 330 V
60 498 V
61 -264 V
60 367 V
60 50 V
61 -479 V
910 2859 Crs
970 2259 Crs
1031 2161 Crs
1091 2836 Crs
1151 2006 Crs
1212 2529 Crs
1272 1951 Crs
1333 2191 Crs
1393 1658 Crs
1453 2099 Crs
1514 1974 Crs
1574 2303 Crs
1634 2196 Crs
1695 2114 Crs
1755 1940 Crs
1816 2732 Crs
1876 2449 Crs
1936 2417 Crs
1997 2527 Crs
2057 1590 Crs
2117 2844 Crs
2178 2541 Crs
2238 2151 Crs
2299 2387 Crs
2359 2267 Crs
2419 2001 Crs
2480 2141 Crs
2540 2510 Crs
2600 1952 Crs
2661 2255 Crs
2721 1640 Crs
2781 2724 Crs
2842 1854 Crs
2902 2124 Crs
2963 2496 Crs
3023 2129 Crs
3083 2141 Crs
3144 2386 Crs
3204 2222 Crs
3264 2295 Crs
3325 2561 Crs
3385 3123 Crs
3446 2397 Crs
3506 2005 Crs
3566 2526 Crs
3627 2348 Crs
3687 2132 Crs
3747 2932 Crs
3808 2357 Crs
3868 2750 Crs
3929 2454 Crs
3989 2822 Crs
4049 2374 Crs
4110 2092 Crs
4170 2345 Crs
4230 2327 Crs
4291 1883 Crs
4351 2562 Crs
4411 2736 Crs
4472 2608 Crs
4532 2536 Crs
4593 2574 Crs
4653 1946 Crs
4713 2165 Crs
4774 2691 Crs
4834 1962 Crs
4894 2589 Crs
4955 2559 Crs
5015 2259 Crs
5076 1982 Crs
5136 2480 Crs
5196 2629 Crs
5257 2750 Crs
5317 2426 Crs
5377 2545 Crs
5438 2843 Crs
5498 2597 Crs
5558 1546 Crs
5619 2249 Crs
5679 2702 Crs
5740 1917 Crs
5800 2430 Crs
5860 2103 Crs
5921 1885 Crs
5981 2242 Crs
6041 2454 Crs
6102 3138 Crs
6162 2234 Crs
6223 2204 Crs
6283 2617 Crs
6343 2329 Crs
6404 2911 Crs
6464 2685 Crs
6524 1585 Crs
6585 1915 Crs
6645 2413 Crs
6706 2149 Crs
6766 2516 Crs
6826 2566 Crs
6887 2087 Crs
6579 4493 Crs
% End plot #2
1.000 UL
LTb
910 4871 N
910 588 L
6037 0 V
0 4283 V
-6037 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
